[{"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/index.js":"1","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/App.js":"2","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/pages/HomePage.js":"3","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/pages/AuthPage.js":"4","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Layout/Layout.js":"5","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Profile/UserProfile.js":"6","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Layout/MainNavigation.js":"7","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/StartingPage/StartingPageContent.js":"8","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Profile/ProfileForm.js":"9","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Auth/AuthForm.js":"10","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/store/auth-context.js":"11"},{"size":387,"mtime":1662881317151,"results":"12","hashOfConfig":"13"},{"size":978,"mtime":1662916655776,"results":"14","hashOfConfig":"13"},{"size":171,"mtime":1662789627588,"results":"15","hashOfConfig":"13"},{"size":130,"mtime":1648643396000,"results":"16","hashOfConfig":"13"},{"size":246,"mtime":1648643396000,"results":"17","hashOfConfig":"13"},{"size":278,"mtime":1648643396000,"results":"18","hashOfConfig":"13"},{"size":983,"mtime":1662915828707,"results":"19","hashOfConfig":"13"},{"size":240,"mtime":1648643396000,"results":"20","hashOfConfig":"13"},{"size":1751,"mtime":1662919768997,"results":"21","hashOfConfig":"13"},{"size":4535,"mtime":1662915475060,"results":"22","hashOfConfig":"13"},{"size":1531,"mtime":1662918279123,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4dfhn",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/index.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/App.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/pages/HomePage.js",[],["48","49"],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/pages/AuthPage.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Layout/Layout.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Profile/UserProfile.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Layout/MainNavigation.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/StartingPage/StartingPageContent.js",[],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Profile/ProfileForm.js",["50"],"/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/components/Auth/AuthForm.js",["51"],"import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  // 로그인 모드인지 아닌지 확인하는 state (default는 true)\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 로그인/회원가입 전환 버튼을 눌렀을 때\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  // 회원가입 버튼을 눌렀을 때\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    // useRef를 통해 email input에 입력된 value를 가져올 수 있음\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    //로그인 모드인지 아닌지 확인하기, 아니라면 회원가입 - axios ver\n    // let url;\n    // if (isLogin) {\n    //   url =\n    //     \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA57iPa21JV5ADJ53aJLWbraqXSklIv_vg\";\n    // } else {\n    //   url =\n    //     \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA57iPa21JV5ADJ53aJLWbraqXSklIv_vg\";\n    // }\n    // let content = {\n    //   email: enteredEmail,\n    //   password: enteredPassword,\n    //   returnSecureToken: true,\n    // };\n    // axios\n    //   .post(url, content)\n    //   .then((res) => {\n    //     console.log(res.data);\n    //     setIsLoading(false);\n    //     authCtx.login(res.data.idToken);\n    //     // console.log(res.data.idToken);\n    //   })\n    //   .then((err) => alert(\"Authentication failed!\", err));\n\n    //로그인 모드인지 아닌지 확인하기, 아니라면 회원가입 - fetch ver\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA57iPa21JV5ADJ53aJLWbraqXSklIv_vg\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA57iPa21JV5ADJ53aJLWbraqXSklIv_vg\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n          // console.log(res.data);\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // 아래는 콘솔에 찍히는 에러 내용이 alert 창에 나타난다.\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n            // alert(errorMessage);\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        authCtx.login(data.idToken);\n        // console.log(data.idToken);\n        // 다른 페이지로 리디렉션 함, 사용자가 뒤로가기를 할 수 없게 함\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={onSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","/Users/hongseong-a/my-personal-practice/React/7. Login/Udemy-Login/src/store/auth-context.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":13},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]